Команды
    mv ~/.docker ~/goinfre && ln -s ~/goinfre/.docker ~/.docker .

autoload -Uz compinit
compinit                            
source <(kubectl completion zsh)

kubectl apply -f                    -   Модифицирует объект, применяя значения свойств из полного файла YAML или JSON. 
                                        Если объект, указанный в YAML/JSON, еще не существует, он будет создан. 
                                        Файл должен содержать полное определение ресурса (он не может включать только 
                                        поля, которые вы хотите обновить, как в случае с kubectl patch).
                                        Пример: kubectl apply -f kubia-deployment -v2.yaml
kubectl get deployment              -   обноружение модуля deployment
kubectl delete deployment "arg"     -   удаление модуля
eval $(minikube docker-env)         -   Команда minikube docker-env возвращает набор экспортируемых переменных окружения 
                                        Bash для настройки локальной среды на повторное использование демона Docker 
                                        внутри экземпляра Minikub
                                        https://coderoad.ru/52310599/%D0%A7%D1%82%D0%BE-%D0%BE%D0%B7%D0%BD%D0%B0%D1%87%D0%B0%D0%B5%D1%82-minikube-docker-env
                                        (после этой команды можно работать с докером через командную строку)
docker images                       -   список образов
docker rmi -f images                -   удаление образа
kubectl get pods --show-labels      -   Показать метки всех подов (или любого другого объекта Kubernetes, которым можно прикреплять метки)
YAML            -   это простой для понимания человеком, структурированный формат описания конфигурации.
---             -   файлы могут содержать несколько определнией ресуров
Deployment      -   Декларативное развертывание и обновление модулей
imagePullPolicy -   Вам следует осознавать, что принятая по умолчанию политика выгрузки образа imagePullPolicy 
                    зависит от тега образа. Если контейнер ссылается на тег latest (явно или не указывая тег вообще),
                    по умолчанию imagePullPolicy равняется Always, но если же контейнер ссылается на любой другой тег, 
                    то по умолчанию политика равняется IfNotPresent
securityContext:
priveliged: true-   https://itnext.io/docker-and-kubernetes-root-vs-privileged-9d2a37453dec 
                    (Иногда модули должны делать все, что может сделать узел, на котором они работают,
                    например использовать защищенные системные устройства или другой функционал ядра, который недоступен обычным контейнерам.)
template        -   шаблон модуля для сборки новых моду
SSH
adduser -D      -   adduser и addgroup добавляют пользователей и группы в систему, исходя из параметров, заданных в командной строке и 
                    информации из файла /etc/adduser.conf.
                     -D      Do not attempt to create the home directory.

ssh-keygen -A   -   Для каждого из типов ключей (rsa, dsa, ecdsa и ed25519), для которых ключи хоста не существуют, создайте ключи хоста с путем к файлу 
                    ключа по умолчанию
                    http://man.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/ssh-keygen.1?query=ssh-keygen&sec=1
Supervisor      -   Необходим для случая когда падает серер, происходи полное уничтожение образа и сборка заново.

imagePullPolicy -	Если в локальном харилеще нет такого образа (называние), то вкладка always будет искать такое образ в хранилеще (Dockerhub),
loadBalancer	-	При создании службы с типом LoadBalancer будет создана внешняя подсистема балансировки на- грузки, и вы сможете 
					подключаться к модулю через общедоступный IP-адрес подсистемы балансировки нагрузки.